openapi: "3.0.3"
info:
  title: eCXv3 - API v1.0
  version: "1.0"
  description: |-
    This contains the definitions for the APWG eCrime eXchange data clearinghouse. 
  contact:
    name: eCX Support
    email: support@ecrimex.net
  license:
    name: GPL
    url:  https://www.gnu.org/licenses/gpl-3.0.en.html
servers:
  - url: "https://ecrimex.net/api/v1"
    description: "The Production server"
  - url: "https://sandbox.ecx2.ecrimex.net/api/v1"
    description: "The Sandbox server"
tags:
  - name: phish
    description: Phishing Lure data
  - name: malicious-domain
    description: DNS names performing malicious activities
  - name: malicious-ip
    description: IP Addresses performing malicious activities
  - name: cryptocurrency-addresses
    description: Bitcoin or other cureency wallet identifiers used in crimnal activity
  - name: report-phishing
    description: Real-time archive of the reportphishing@apwg.org email mailbox
  

paths:
  /phish/{id}:
    get:
      tags:
        - phish
      operationId: GetPhishID
      description: "Get a specific phish record using it's id"
      summary: Retrieve one phish record
      parameters:
        - $ref: "#/components/parameters/CommonParameters"
      responses:
        '200':
          description: "Results are a series of these records"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PhishRespBody"
              example:
                {
                  "id": 108584304,
                  "url": "http:\/\/demolink2.com/phish1.php",
                  "brand": "BDA",
                  "discoveredAt": 1002020785,
                  "createdAt": 1702020185,
                  "updatedAt": 1702020785,
                  "status": "inactive",
                  "confidence": 50
                }
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      security: 
        - api_key: []

    put:
      tags:
        - phish
      operationId: PutPhish
      summary: "Update the confidence value or status of a phish record"
      parameters:
        - $ref: "#/components/parameters/CommonParameters"
      requestBody:
        description: The URL field cannot be updated with this operation.
        required: true
        content:
          application/json:
            schema:    
              $ref: "#/components/schemas/PhishUpdateReqBody"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonResponseBody"
              example:
                { 
                  "id": 108584304
                }
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"

  /phish:
    get:
      tags:
        - phish
      operationId: GetPhish
      description: "Get upto 10,000 of the latest phish with no id parameter is used"
      summary: Retrieve lots of phish records
      responses:
        '200':
          description: "Results are a series of these records"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PhishRespBody"
              example:
                {
                "current_page": 1,
                "data": [
                  { 
                  "id": 108584304,
                  "url": "http:\/\/demolink2.com/phish1.php",
                  "brand": "BDA",
                  "discoveredAt": 1002020785,
                  "createdAt": 1702020185,
                  "updatedAt": 1702020785,
                  "status": "inactive",
                  "confidence": 50
                  }
                ] }
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      security: 
        - api_key: []

    post:
      tags:
        - phish
      operationId: PostPhish
      summary: Submit one or more phish records
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PhishReqBody"
      responses:
        "201":
          description: ""
          content:
            application/json:
              #schema:
                #$ref: "#/components/schemas/CommonResponseBody"
              example:
                { 
                  "id": 108584304
                }
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"

### MALICIOUS-IP PATHS

  /malicious-ip/{id}: #TODO:
    get:
      tags:
        - malicious-ip
      operationId: GetMalIP
      description: "Get a specific malicious-ip record using it's id"
      summary: "Retrieve one malicious-ip record"
      parameters:
        - $ref: "#/components/parameters/CommonParameters"
      responses:
        '200':
          description: "Results are a series of these records"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MalIPRespBody"
              example:
                { 
                # TODO
                }
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      security: 
        - api_key: []

    put:  #TODO:
      tags:
        - malicious-ip
      operationId: PutMalIP
      summary: "Update the confidence value or status of a malicious-ip record"
      parameters:
        - $ref: "#/components/parameters/CommonParameters"
      requestBody:
        required: true
        content:
          application/json:
            schema:    
              $ref: "#/components/schemas/MalIPUpdateReqBody"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonResponseBody"
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"

  /malicious-ip: #TODO:
    get:
      tags:
        - malicious-ip
      operationId: GetMalIP
      description: "Get a specific malicious-ip record using it's record_id or upto 10,000 of the latest entries with no id parameter"
      summary: "Retrieve one malicious-ip record"
      parameters:
        - $ref: "#/components/parameters/CommonParameters"
      responses:
        '200':
          description: "Results are a series of these records"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MalIPRespBody"
              example:
                { 
                #TODO:
                }
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      security: 
        - api_key: []

    post: #TODO:
      tags:
        - malicious-ip
      operationId: PostMalIP
      summary: "Submit one or more IP Addresses"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MalIPReqBody"
      responses:
        "201":
          description: ""
          content:
            application/json:
              example:
                { 
                  "id": 108584304
                }
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"

### MALICIOUS-DOMAIN PATHS ###

  /malicious-domain/{id}:
    get:
      tags:
        - malicious-domain
      operationId: GetMalDomains
      description: "Get a specific malicious-ip record using it's id or upto 10,000 of the latest entries with no id parameter"
      summary: "Retrieve an entry"
      parameters:
        - $ref: "#/components/parameters/CommonParameters"
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalDomainRespBody'
              example:
                {
                "current_page": 1,
                "data": [
                  {
                    "id": 345569,
                    "domain": "anydomain.placeable.com",
                    "discoveredAt": "2023-12-07T16:22:55",
                    "classification": "scam",
                    "confidence": 100,
                    "status": "active",
                    "createdAt": "2023-12-09T18:22:02+00:00",
                    "updatedAt": "2023-12-09T18:22:02+00:00",
                    "notes": [],
                    "metadata": {
                      "submissionCount": 1
                    }
                  }
                ] 
                }
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      security: 
        - api_key: []

    put:  #TODO:
      tags:
        - malicious-domain
      operationId: PutMalDomain
      summary: "Update the confidence value or status of a malicious-ip record"
      parameters:
        - $ref: "#/components/parameters/CommonParameters"
      requestBody:
        required: true
        content:
          application/json:
            schema:    
              $ref: "#/components/schemas/MalDomainReqBody"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonResponseBody"
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"


  /malicious-domain: #TODO:
    get:
      tags:
        - malicious-domain
      operationId: GetMalIP
      description: "Get upto 10,000 of the latest entries with no id parameter"
      summary: "Retreive many records"
      responses:
        '200':
          description: "Results are a series of these records"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MalDomainRespBody"
              example:
                { 
                  "id": 345569,
                  "domain": "anydomain.placeable.com",
                  "discoveredAt": "2023-12-07T16:22:55",
                  "classification": "scam",
                  "confidence": 100,
                  "status": "active",
                  "createdAt": "2023-12-09T18:22:02+00:00",
                  "updatedAt": "2023-12-09T18:22:02+00:00",
                  "notes": [],
                  "metadata": {
                    "submissionCount": 1
                  }
                  }
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      security: 
        - api_key: []

    post: #TODO:
      tags:
        - malicious-domain
      operationId: PostMalIP
      summary: "Submit one or more IP Addresses"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MalDomainReqBody"
      responses:
        "201":
          description: ""
          content:
            application/json:
              example:
                { 
                  "id": 108584304
                }
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
   
### REPORT-PHISHING PATHS ###
  /report-phishing: #TODO:
    get:
      tags:
        - report-phishing
      operationId: GetReportPhishing
      description: "Get a specific report-phishing email record using it's record_id or upto 10,000 of the latest entries with no id parameter"
      summary: "A short summary"
      requestBody:
        description: "The id of the entry to be returned. Without an id, the most recent 10,000 records are returned."
        required: false
        content:
          application/json:
            schema:
              properties:
                id:
                  type: integer
      responses:
        '200':
          description: "Results are a series of these records"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReportPhishingRespBody"
              example:
                { 
                # TODO
                }
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      security: 
        - api_key: []

### CRYPTOCURRENCY-ADDRESSES PATHS ###

  /cryptocurrency-addresses: #TODO:
    get:
      tags:
        - cryptocurrency-addresses
      operationId: GetCrypto
      description: "Get a specific malicious-ip record using it's record_id or upto 10,000 of the latest entries with no id parameter"
      summary: "A short summary"
      requestBody:
        description: "The id of the entry to be returned. Without an id, the most recent 10,000 records are returned."
        required: false
        content:
          application/json:
            schema:
              properties:
                id:
                  type: integer
      responses:
        '200':
          description: "Results are a series of these records"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MalIPRespBody"
              example:
                { 
                # TODO
                }
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      security: 
        - api_key: []

    post: #TODO:
      tags:
        - cryptocurrency-addresses
      operationId: PostCrypto
      summary: "Submit one or more IP Addresses"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MalIPReqBody"
      responses:
        "201":
          description: ""
          content:
            application/json:
              example:
                { 
                  "id": 108584304
                }
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
    put:  #TODO:
      tags:
        - cryptocurrency-addresses
      operationId: PutCrypto
      summary: "Update the confidence value or status of a malicious-ip record"
      requestBody:
        required: true
        content:
          application/json:
            schema:    
              $ref: "#/components/schemas/MalIPUpdateReqBody"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonResponseBody"
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"


security:
  - api_key: []

components:
    schemas:

      Error-types:
        type: string
        enum:
          - api_error
          - card_error
          - invalid_request_error

      ErrorModel:
        description: "The Error Model"
        type: object
        properties:
          class:
            $ref: '#/components/schemas/Error-types'
          code:
            oneOf:
              - title: '400'
                description: "Bad Request	- The request was unacceptable, often due to missing a required parameter or the JSON failed to validate."
              - title: '401'
                description: "Unauthorized - No valid API key provided."
              - title: '402'
                description: "Request Failed - The parameters were valid but the request failed."
              - title: "403"
                description: "Forbidden - The API key doesn't have permissions to perform the request."
              - title: '404'
                description: "Not Found - The requested resource doesn't exist."
              - title: '405'
                description: "Method Not Allowed - The server doesn't support the HTTP method used in the request."
              - title: '409'
                description: "Duplicate - This object is already in the database"
              - title:  "428"
                description: "Error - You attempted to submit a resource as a false positive (with a confidence level = 0)"
              - title: '429'
                description: "Too Many Requests	Too many requests hit the API too quickly. We recommend an exponential backoff of your requests."
              - title: '50X'
                description: "Server Errors - Something went wrong on APWG's end. (These are rare.)"
  
          message:
            type: string
          errors:
            type: string


            
      CommonResponseBody:
        description: "This is the structure for all eCX responses."
        type: object
        properties:
          current_page:
            type: integer
          data:
            anyOf:
              - $ref: '#/components/schemas/PhishRespBody'
          first_page_url: 
            type: string
          from: 
            type: integer
          last_page:
            type: integer
          last_page_url:
            description: ""
            type: string
          links: 
            type: array
            items: 
              type: object
              properties: 
                url:
                  type: string
                label: 
                  type: string
                active: 
                  type: boolean
          next_page_url: 
            type: string
          path: 
            type: string
          per_page: 
            type: integer
          prev_page_url: 
            type: string
          to:
            type: integer
          total:
            type: integer
  
### PHISH MODULE SCHEMAS ###

      PhishFieldsObject:
        type: object
        properties:
          #id:
          #  type: integer
          #  format: int64
          #  description: "Unique identifier for the object."
          url:
            type: string
            description: "phish url in format http[s]://domain/page"
          brand:
            type: string
            description: "The Brand Name used in the phish"
          discoveredAt:
            type: integer
            format: date-time
            description: "Expressed as milliseconds since the epoch"
          status:
            type: string
            enum:
              - active
              - inactive
            description: "Indicates whether the phish page is still accessible."
          confidence:
            type: integer
            enum:
              - 0
              - 50
              - 90
              - 100
            description: "An indicator of how confident the submittor that this is a real phish."
          createdAt:
            type: integer
            format: date-time
            description: "When this phish object was created"
          updatedAt:
            type: integer
            format: date-time
            description: "The last time this record was modified"
          createdBy:
            type: integer
            description: "(admin viewable only) The userid of the user that created this record"
          updatedBy:
            type: integer
            description: "(admin viewable only) The userid of the last user to modify tis record"
  
      PhishReqBody: 
        type: object
        properties:
          url:
            type: string
            description: "phish url in format http[s]://domain/page"
          brand:
            type: string
            description: "The Brand Name used in the phish"
          discoveredAt:
            type: integer
            format: date-time
            description: "Expressed as milliseconds since the epoch"
          status:
            type: string
            enum:
              - active
              - inactive
            description: "Indicates whether the phish page is still accessible."
          confidence:
            type: integer
            enum:
              - 0
              - 50
              - 90
              - 100
            description: "An indicator of how confident the submittor that this is a real phish."

      PhishUpdateReqBody: 
        type: object
        properties:
          brand:
            type: string
            description: "The Brand Name used in the phish"
          discoveredAt:
            type: integer
            format: date-time
            description: "Expressed as milliseconds since the epoch"
          status:
            type: string
            enum:
              - active
              - inactive
            description: "Indicates whether the phish page is still accessible."
          confidence:
            type: integer
            enum:
              - 0
              - 50
              - 90
              - 100
            description: "An indicator of how confident the submittor that this is a real phish."
    
      PhishRespBody:
        description: "The response from a phish call."
        type: object
        properties:
          id:
            type: integer
            format: int64
            description: "Unique identifier for the object."
          url:
            type: string
          brand:
            type: string
            description: "The Brand Name used in the phish"
          discoveredAt:
            type: integer
            format: date-time
            description: "Expressed as milliseconds since the epoch"
          status:
            type: string
            enum:
              - active
              - inactive
            description: "Indicates whether the phish page is still accessible."
          confidence:
            type: integer
            enum:
              - 0
              - 50
              - 90
              - 100
            description: "An indicator of how confident the submittor is that this is a real phish."
          ip: 
            type: array
            items:
              type: string
          asn: 
            type: array
            items: 
              type: integer
          updatedAt: 
            type: integer
          createdAt: 
            type: integer
          metadata": 
            type: object
            properties:
              submission_count: 
                type: integer
      
      #PhishFieldsSchema:
        #type: object
       # properties:
          
          #oneOf:
          # id

           # - title: url
           # - title: brand
           # - title: discoveredAt
           # - title: status
           # - title: confidence
           # - title: createdAt
           # - title: updatedAt
  
      PhishSortsObject:
        description: "asc or desc"
        type: object
        properties:
          id:
            type: string
            enum:
              - "asc"
              - "desc"
          url:
            type: string
            enum:
              - "asc"
              - "desc"
          brand":
            type: string
            enum:
              - "asc"
              - "desc"
          discoveredAt:
            type: string
            enum:
              - "asc"
              - "desc"
          status:
            type: string
            enum:
              - "asc"
              - "desc"
          confidence:
            type: string
            enum:
              - "asc"
              - "desc"
          createdAt:
            type: string
            enum:
              - "asc"
              - "desc"
          updatedAt:
            type: string
            enum:
              - "asc"
              - "desc"
        example:
          summary:
          description:
          value:
            {
              "filters": { ... },
              "fields": [...],
              "sorts":
                [
                  { "confidence": "asc" },
                  --- order by index 0 first,
                  { "createdAt": "desc" },
                  --- order by index 1 second,
                  { "id": "asc" },
                  --- order by index 3 always last,
                ],
              "limit": 25,
            }
  
      SearchObject:
        type: object
        properties:
          filters:
            type: array
            anyOf:
            - title: id
            - title: url
            - title: brand
            - title: discoveredAt
            - title: status
            - title: confidence
            - title: createdAt
            - title: updatedAt
          fields:
            type: array
            $ref: "#/components/schemas/PhishFieldsObject"
          sorts:
            type: array
            $ref: "#/components/schemas/PhishSortsObject"
            limit:
              type: integer

### MALICIOUS-IP SCHEMAS 

      MalIPReqBody: 
        type: object
        properties:
          id:
            type: integer
            format: int64
            description: "Unique identifier for the object."
          url:
            type: string
            description: "phish url in format http[s]://domain/page"
          brand:
            type: string
            description: "The Brand Name used in the phish"
          discoveredAt:
            type: integer
            format: date-time
            description: "Expressed as milliseconds since the epoch"
          status:
            type: string
            enum:
              - active
              - inactive
            description: "Indicates whether the phish page is still accessible."
          confidence:
            type: integer
            enum:
              - 0
              - 50
              - 90
              - 100
            description: "An indicator of how confident the submittor that this is a real phish."
          createdAt:
            type: integer
            format: date-time
            description: "When this phish object was created"

      MalIPUpdateReqBody: 
        type: object
        properties:
          id:
            type: integer
            format: int64
            description: "Unique identifier for the object."
          brand:
            type: string
            description: "The Brand Name used in the phish"
          discoveredAt:
            type: integer
            format: date-time
            description: "Expressed as milliseconds since the epoch"
          status:
            type: string
            enum:
              - active
              - inactive
            description: "Indicates whether the phish page is still accessible."
          confidence:
            type: integer
            enum:
              - 0
              - 50
              - 90
              - 100
            description: "An indicator of how confident the submittor that this is a real phish."
               
  
      MalIPRespBody:
        description: "The response from a phish call."

  
### MALICIOUS-DOMAIN SCHEMAS ###
      MalDomainReqBody:
        description: "The response from a phish call."
        type: object
        properties:  
          domain:
            type: string
          classification:
            type: string
            description: "The activity detected"
            enum: [botnet C&C, scam, fake store,]
          discoveredAt:
            type: integer
            description: "Expressed as milliseconds since the epoch"
          status:
            type: string
            enum:
              - active
              - inactive
            description: "Indicates whether the phish page is still accessible."
          confidence:
            type: integer
            enum: [0, 50, 90, 100]
            description: "An indicator of how confident the submittor is that this is a real phish."
          notes: 
            type: object
            properties:
              description: 
                type: string
      
      MalDomainRespBody:
        description: "The response from a malicious-domain call."
        type: object
        properties:
          id:
            type: integer
            format: int64
            description: "Unique identifier for the object."
          domain:
            type: string
          classification:
            type: string
            description: "The activity detected"
            enum: [botnet C&C, scam, fake store,]
          discoveredAt:
            type: integer
            format: date-time
            description: "Expressed as milliseconds since the epoch"
          status:
            type: string
            enum:
              - active
              - inactive
            description: "Indicates whether the phish page is still accessible."
          confidence:
            type: integer
            enum: [0, 50, 90, 100]
            description: "An indicator of how confident the submittor is that this is a real phish."
          updatedAt: 
            type: integer
          createdAt: 
            type: integer
          metadata: 
            type: object
            properties:
              submission_count: 
                type: integer
          notes: 
            type: object
            properties:
              createdAt: 
                type: integer
              description: 
                type: string
              id: 
                type: integer
      
### REPORT-PHISHING SCHEMAS ###

      ReportPhishingRespBody:
        description: Something goes here
  
### CRYPTOCURRENCY-ADDRESSES SCHEMAS ###


  
      
    responses:
      '200':
        description: "Success."
      '201':
        description: "Successful insertion."
      '400':
        description: "Bad Request	- The request was unacceptable, often due to missing a required parameter or the JSON failed to validate."
      '401':
        description: "Unauthorized - No valid API key provided."
      '402':
        description: "Request Failed - The parameters were valid but the request failed."
      "403":
        description: "Forbidden - The API key doesn't have permissions to perform the request."
      "404":
        description: "Not Found - The requested resource doesn't exist."
      "405":
        description: "Method Not Allowed - The server doesn't support the HTTP method used in the request."
      "409":
        description: "Duplicate - This object is already in the database"
      "428":
        description: "Error - You attempted to submit a resource as a false positive (with a confidence level = 0)"
      "429":
        description: "Too Many Requests	Too many requests hit the API too quickly. We recommend an exponential backoff of your requests."
      '40X':
        description: "Unspecified Error - Something went wrong on APWG's end. (These are rare.)"
        content: 
          application/json:
            schema: 
              $ref: '#/components/schemas/ErrorModel'
      "50X":
        description: "Server Errors - Something went wrong on APWG's end. (These are rare.)"
  
  

  
    parameters:
      CommonParameters:
          name: id
          in: path
          description: The id of the record to be returned. Without an id, the most recent 10,000 records are returned
          required: true
          explode: true
          schema:
            type: integer

      SearchObject:
        name: SearchObject
        in: query
        required: true
        description: ""
        schema:
          $ref: "#/components/schemas/PhishFieldsObject"
  
    examples:
      example1:
        description: "" #TODO add description 
        value:
          {
          "current_page": 1,
          "data": {
            ""  #$ref: '#/components/responses/PhishRespBody'
          },
          "first_page_url": "https:\/\/ecx3-stage.ecrimex.net\/api\/v1\/phish?page=1",
          "from": 1,
          "last_page": 400,
          "last_page_url": "https:\/\/ecx3-stage.ecrimex.net\/api\/v1\/phish?page=400",
          "links":  [
            "url": null,
            "label": "&laquo; Previous",
            "active": false,
          ],
          "next_page_url": "https:\/\/ecx3-stage.ecrimex.net\/api\/v1\/phish?page=2",
          "path": "https:\/\/ecx3-stage.ecrimex.net\/api\/v1\/phish",
          "per_page": 25,
          "prev_page_url": "",
          "to": 25,
          "total": 10000
          }
  
   
    securitySchemes:
      api_key:
        type: apiKey
        name: api_key
        in: header
      